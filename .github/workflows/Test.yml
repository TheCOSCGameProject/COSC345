name: MSBuild CI with CodeCov and Codacy

on: [push, pull_request]

env:
  SOLUTION_FILE_PATH: Valeris
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  build-and-test:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install Chocolatey
      run: |
        Set-ExecutionPolicy Bypass -Scope Process -Force
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
        iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))

    - name: Install MinGW and other dependencies
      run: |
        choco install mingw -y
        choco install msbuild -y
        choco install python -y
        pip install gcovr

    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.config') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      run: |
        msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Platform=x64 /p:CXXLanguageStandard=C++17 /v:n ${{env.SOLUTION_FILE_PATH}}

    - name: Build and Run tests
      run: |
        g++ -std=c++17 --coverage -o run_tests.exe tests/minigames_test.cpp && .\run_tests.exe

    - name: Generate Coverage Report with gcovr
      run: |
        gcovr -r . --xml-pretty -o coverage.xml
        gcovr -r . --html --html-details -o coverage.html

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        fail_ci_if_error: true

    - name: Upload coverage to Codacy
      uses: codacy/codacy-coverage-reporter-action@v1
      with:
        project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
        coverage-reports: coverage.xml
        final: true

    - name: Upload HTML Coverage Report as Artifact
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coverage.html
