name: MSBuild CI with CodeCov and Codacy

on: [push, pull_request]

env:
  SOLUTION_FILE_PATH: Valeris
  BUILD_CONFIGURATION: Debug

permissions:
  contents: read

jobs:
  build-and-test:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Setup OpenCppCoverage and add to PATH
      run: |
        choco install OpenCppCoverage -y
        echo "C:\Program Files\OpenCppCoverage" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Restore NuGet packages
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

    - name: Run tests and generate coverage
      run: |
        if (Test-Path ".\run_tests.exe") {
          OpenCppCoverage.exe --export_type=cobertura:coverage.xml --sources ${{github.workspace}} -- .\run_tests.exe
        } else {
          echo "Test executable not found"
          exit 1
        }

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        fail_ci_if_error: true

    - name: Upload coverage to Codacy
      uses: codacy/codacy-coverage-reporter-action@v1
      with:
        project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
        coverage-reports: coverage.xml

    - name: Run Codacy Analysis CLI
      uses: codacy/codacy-analysis-cli-action@master
      with:
        project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
        verbose: true
        output: results.sarif
        format: sarif
        directory: ${{ github.workspace }}

    - name: Upload SARIF results file
      uses: github/codeql-action/upload-sarif@main
      with:
        sarif_file: results.sarif

    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coverage.xml
